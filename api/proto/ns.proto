syntax = "proto3";

package cellmanager;

service CellManager {

  rpc CreateCell (CellRequest) returns (CellStatusReply) {}
  rpc SetWorldSize (WorldSize) returns (TransactionSucceeded) {}
  rpc DeleteCell (CellRequest) returns (CellStatusReply) {}
  rpc ListCells (ListCellsRequest) returns (ListCellsReply) {}
  rpc AddPlayerToCell (PlayerInCellRequest) returns (TransactionSucceeded) {}
  rpc AddPlayerToCellWithPositions (PlayerInCellRequestWithPositions) returns (TransactionSucceeded) {}

  rpc RequestCellMasterWithPositions (Position) returns (CellMasterReply) {}

  rpc DivideCell (CellRequest) returns (CellListReply) {}

  rpc ListPlayersInCell (ListPlayersRequest) returns (PlayersReply) {}
  rpc RequestCellMaster (CellMasterRequest) returns (CellMasterReply) {}
  rpc UnregisterCellMaster (CellMasterRequest) returns (CellMasterStatusReply) {}
  rpc PlayerLeftCell (PlayerInCellRequest) returns (PlayerStatusReply) {}
  rpc RequestCellNeighbours (CellNeighbourRequest) returns (CellNeighboursReply) {}
  rpc RequestCellSizeChange (CellChangeSizeRequest) returns (CellChangeStatusReply) {}
  rpc LockCells (LockCellsRequest) returns (CellLockStatusReply) {}
  rpc UnlockCells (LockCellsRequest) returns (CellLockStatusReply) {}
}


message Cell {
    string cellId = 1;
    int64 posX = 2;
    int64 posY = 3;
    int64 width = 4;
    int64 height = 5;
}

message CellListReply {
    repeated Cell cells = 1;
}

message TransactionSucceeded {
  bool succeeded = 1;
}

message CellNeighbourRequest {
  string cellId = 1;
}

message CellChangeSizeRequest {
  string cellId = 1;
  float newHeight = 2;
  float newWidth = 3;
}

message WorldSize {
  int64 height = 1;
  int64 width = 2;
}

message LockCellsRequest {
  repeated string cellId = 1;
  string senderCellId = 2;
}

message PlayerInCellRequest {
  string ip = 1;
  int32 port = 2;
  string cellId = 3;
}

message Position {
    int64 posX = 1;
    int64 posY = 2;
}


message PlayerInCellRequestWithPositions {
  string ip = 1;
  int32 port = 2;
  int64 posX = 3;
  int64 posY = 4;
}

message ListCellsRequest {/** should be empty **/}

message ListPlayersRequest {
  string cellId = 1;
}

message CellMasterRequest {
  string cellId = 1;

}

message CellMasterStatusReply {
  bool wasUnregistered = 1;
}

message PlayerStatusReply {
  bool playerLeft = 1;

}

message CellRequest {
  string cellId = 1;
}

message CellNeighboursReply {
  repeated string cellId = 1;

}

message CellChangeStatusReply {
  bool succeeded = 1;

}

message CellLockStatusReply {
  bool locked = 1;
  string lockee = 2;
}

message CellStatusReply {
  bool wasPerformed = 1;
}

message ListCellsReply {
  repeated string cellId = 1;
}

message PlayersReply {
  repeated string ip = 1;
  repeated int32 port = 2;
}

message CellMasterReply {
  string ip = 1;
  int32 port = 2;
}