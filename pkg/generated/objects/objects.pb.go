// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.6.1
// source: objects.proto

package objects

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MultipleObjects struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Objects []*SingleObject `protobuf:"bytes,1,rep,name=objects,proto3" json:"objects,omitempty"`
}

func (x *MultipleObjects) Reset() {
	*x = MultipleObjects{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MultipleObjects) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MultipleObjects) ProtoMessage() {}

func (x *MultipleObjects) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MultipleObjects.ProtoReflect.Descriptor instead.
func (*MultipleObjects) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{0}
}

func (x *MultipleObjects) GetObjects() []*SingleObject {
	if x != nil {
		return x.Objects
	}
	return nil
}

type CellList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cells []*Cell `protobuf:"bytes,1,rep,name=cells,proto3" json:"cells,omitempty"`
}

func (x *CellList) Reset() {
	*x = CellList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CellList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CellList) ProtoMessage() {}

func (x *CellList) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CellList.ProtoReflect.Descriptor instead.
func (*CellList) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{1}
}

func (x *CellList) GetCells() []*Cell {
	if x != nil {
		return x.Cells
	}
	return nil
}

type SingleObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellId     string   `protobuf:"bytes,1,opt,name=cellId,proto3" json:"cellId,omitempty"`
	ObjectId   string   `protobuf:"bytes,2,opt,name=objectId,proto3" json:"objectId,omitempty"`
	UpdateKey  []string `protobuf:"bytes,3,rep,name=updateKey,proto3" json:"updateKey,omitempty"`
	NewValue   []string `protobuf:"bytes,4,rep,name=newValue,proto3" json:"newValue,omitempty"`
	PosX       int64    `protobuf:"varint,5,opt,name=posX,proto3" json:"posX,omitempty"`
	PosY       int64    `protobuf:"varint,6,opt,name=posY,proto3" json:"posY,omitempty"`
	ObjectType string   `protobuf:"bytes,7,opt,name=objectType,proto3" json:"objectType,omitempty"`
}

func (x *SingleObject) Reset() {
	*x = SingleObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleObject) ProtoMessage() {}

func (x *SingleObject) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleObject.ProtoReflect.Descriptor instead.
func (*SingleObject) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{2}
}

func (x *SingleObject) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

func (x *SingleObject) GetObjectId() string {
	if x != nil {
		return x.ObjectId
	}
	return ""
}

func (x *SingleObject) GetUpdateKey() []string {
	if x != nil {
		return x.UpdateKey
	}
	return nil
}

func (x *SingleObject) GetNewValue() []string {
	if x != nil {
		return x.NewValue
	}
	return nil
}

func (x *SingleObject) GetPosX() int64 {
	if x != nil {
		return x.PosX
	}
	return 0
}

func (x *SingleObject) GetPosY() int64 {
	if x != nil {
		return x.PosY
	}
	return 0
}

func (x *SingleObject) GetObjectType() string {
	if x != nil {
		return x.ObjectType
	}
	return ""
}

type NewCellMaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   string `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *NewCellMaster) Reset() {
	*x = NewCellMaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewCellMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewCellMaster) ProtoMessage() {}

func (x *NewCellMaster) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewCellMaster.ProtoReflect.Descriptor instead.
func (*NewCellMaster) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{3}
}

func (x *NewCellMaster) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *NewCellMaster) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type Cell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CellId string `protobuf:"bytes,1,opt,name=cellId,proto3" json:"cellId,omitempty"`
	PosX   int64  `protobuf:"varint,2,opt,name=posX,proto3" json:"posX,omitempty"`
	PosY   int64  `protobuf:"varint,3,opt,name=posY,proto3" json:"posY,omitempty"`
	Width  int64  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height int64  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *Cell) Reset() {
	*x = Cell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cell) ProtoMessage() {}

func (x *Cell) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cell.ProtoReflect.Descriptor instead.
func (*Cell) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{4}
}

func (x *Cell) GetCellId() string {
	if x != nil {
		return x.CellId
	}
	return ""
}

func (x *Cell) GetPosX() int64 {
	if x != nil {
		return x.PosX
	}
	return 0
}

func (x *Cell) GetPosY() int64 {
	if x != nil {
		return x.PosY
	}
	return 0
}

func (x *Cell) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Cell) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type EmptyReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyReply) Reset() {
	*x = EmptyReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyReply) ProtoMessage() {}

func (x *EmptyReply) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyReply.ProtoReflect.Descriptor instead.
func (*EmptyReply) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{5}
}

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_objects_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_objects_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_objects_proto_rawDescGZIP(), []int{6}
}

var File_objects_proto protoreflect.FileDescriptor

var file_objects_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x42, 0x0a, 0x0f, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x07, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x2f, 0x0a, 0x08,
	0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x05, 0x63, 0x65, 0x6c, 0x6c,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x52, 0x05, 0x63, 0x65, 0x6c, 0x6c, 0x73, 0x22, 0xc4, 0x01,
	0x0a, 0x0c, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x6f, 0x73, 0x58, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x58,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x59, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x70, 0x6f, 0x73, 0x59, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x33, 0x0a, 0x0d, 0x4e, 0x65, 0x77, 0x43, 0x65, 0x6c, 0x6c, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x74, 0x0a, 0x04, 0x43, 0x65, 0x6c,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x65, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x73,
	0x58, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x73, 0x58, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x73, 0x59, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x6f, 0x73,
	0x59, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22,
	0x0c, 0x0a, 0x0a, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x0e, 0x0a,
	0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x32, 0xa4, 0x04,
	0x0a, 0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x48, 0x0a, 0x15, 0x52, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x12, 0x18, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x13, 0x2e, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x65, 0x6c, 0x6c,
	0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x4e, 0x65, 0x77, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x13,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x1a, 0x13, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x16,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x0d, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x1a, 0x18, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x17, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x4d, 0x75,
	0x74, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x18, 0x2e, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x1a, 0x13, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a,
	0x15, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x43, 0x65, 0x6c, 0x6c, 0x4d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x11, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x6f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00,
	0x12, 0x39, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x43, 0x65, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x0d, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x65, 0x6c, 0x6c, 0x1a,
	0x18, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70,
	0x6c, 0x65, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x07, 0x49,
	0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x15, 0x2e, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_objects_proto_rawDescOnce sync.Once
	file_objects_proto_rawDescData = file_objects_proto_rawDesc
)

func file_objects_proto_rawDescGZIP() []byte {
	file_objects_proto_rawDescOnce.Do(func() {
		file_objects_proto_rawDescData = protoimpl.X.CompressGZIP(file_objects_proto_rawDescData)
	})
	return file_objects_proto_rawDescData
}

var file_objects_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_objects_proto_goTypes = []interface{}{
	(*MultipleObjects)(nil), // 0: objects.MultipleObjects
	(*CellList)(nil),        // 1: objects.CellList
	(*SingleObject)(nil),    // 2: objects.SingleObject
	(*NewCellMaster)(nil),   // 3: objects.NewCellMaster
	(*Cell)(nil),            // 4: objects.Cell
	(*EmptyReply)(nil),      // 5: objects.EmptyReply
	(*EmptyRequest)(nil),    // 6: objects.EmptyRequest
}
var file_objects_proto_depIdxs = []int32{
	2,  // 0: objects.MultipleObjects.objects:type_name -> objects.SingleObject
	4,  // 1: objects.CellList.cells:type_name -> objects.Cell
	0,  // 2: objects.Player.ReceiveMutatedObjects:input_type -> objects.MultipleObjects
	3,  // 3: objects.Player.UpdateCellMaster:input_type -> objects.NewCellMaster
	2,  // 4: objects.Player.RequestObjectMutation:input_type -> objects.SingleObject
	4,  // 5: objects.Player.RequestMutatingObjects:input_type -> objects.Cell
	0,  // 6: objects.Player.BroadcastMutatedObjects:input_type -> objects.MultipleObjects
	1,  // 7: objects.Player.ReceiveCellMastership:input_type -> objects.CellList
	4,  // 8: objects.Player.GetCellState:input_type -> objects.Cell
	6,  // 9: objects.Player.IsAlive:input_type -> objects.EmptyRequest
	5,  // 10: objects.Player.ReceiveMutatedObjects:output_type -> objects.EmptyReply
	5,  // 11: objects.Player.UpdateCellMaster:output_type -> objects.EmptyReply
	5,  // 12: objects.Player.RequestObjectMutation:output_type -> objects.EmptyReply
	0,  // 13: objects.Player.RequestMutatingObjects:output_type -> objects.MultipleObjects
	5,  // 14: objects.Player.BroadcastMutatedObjects:output_type -> objects.EmptyReply
	5,  // 15: objects.Player.ReceiveCellMastership:output_type -> objects.EmptyReply
	0,  // 16: objects.Player.GetCellState:output_type -> objects.MultipleObjects
	5,  // 17: objects.Player.IsAlive:output_type -> objects.EmptyReply
	10, // [10:18] is the sub-list for method output_type
	2,  // [2:10] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_objects_proto_init() }
func file_objects_proto_init() {
	if File_objects_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_objects_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MultipleObjects); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CellList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewCellMaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_objects_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_objects_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_objects_proto_goTypes,
		DependencyIndexes: file_objects_proto_depIdxs,
		MessageInfos:      file_objects_proto_msgTypes,
	}.Build()
	File_objects_proto = out.File
	file_objects_proto_rawDesc = nil
	file_objects_proto_goTypes = nil
	file_objects_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PlayerClient is the client API for Player service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PlayerClient interface {
	ReceiveMutatedObjects(ctx context.Context, in *MultipleObjects, opts ...grpc.CallOption) (*EmptyReply, error)
	UpdateCellMaster(ctx context.Context, in *NewCellMaster, opts ...grpc.CallOption) (*EmptyReply, error)
	RequestObjectMutation(ctx context.Context, in *SingleObject, opts ...grpc.CallOption) (*EmptyReply, error)
	RequestMutatingObjects(ctx context.Context, in *Cell, opts ...grpc.CallOption) (*MultipleObjects, error)
	BroadcastMutatedObjects(ctx context.Context, in *MultipleObjects, opts ...grpc.CallOption) (*EmptyReply, error)
	ReceiveCellMastership(ctx context.Context, in *CellList, opts ...grpc.CallOption) (*EmptyReply, error)
	GetCellState(ctx context.Context, in *Cell, opts ...grpc.CallOption) (*MultipleObjects, error)
	IsAlive(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*EmptyReply, error)
}

type playerClient struct {
	cc grpc.ClientConnInterface
}

func NewPlayerClient(cc grpc.ClientConnInterface) PlayerClient {
	return &playerClient{cc}
}

func (c *playerClient) ReceiveMutatedObjects(ctx context.Context, in *MultipleObjects, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/objects.Player/ReceiveMutatedObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) UpdateCellMaster(ctx context.Context, in *NewCellMaster, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/objects.Player/UpdateCellMaster", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) RequestObjectMutation(ctx context.Context, in *SingleObject, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/objects.Player/RequestObjectMutation", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) RequestMutatingObjects(ctx context.Context, in *Cell, opts ...grpc.CallOption) (*MultipleObjects, error) {
	out := new(MultipleObjects)
	err := c.cc.Invoke(ctx, "/objects.Player/RequestMutatingObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) BroadcastMutatedObjects(ctx context.Context, in *MultipleObjects, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/objects.Player/BroadcastMutatedObjects", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) ReceiveCellMastership(ctx context.Context, in *CellList, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/objects.Player/ReceiveCellMastership", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) GetCellState(ctx context.Context, in *Cell, opts ...grpc.CallOption) (*MultipleObjects, error) {
	out := new(MultipleObjects)
	err := c.cc.Invoke(ctx, "/objects.Player/GetCellState", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *playerClient) IsAlive(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*EmptyReply, error) {
	out := new(EmptyReply)
	err := c.cc.Invoke(ctx, "/objects.Player/IsAlive", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PlayerServer is the server API for Player service.
type PlayerServer interface {
	ReceiveMutatedObjects(context.Context, *MultipleObjects) (*EmptyReply, error)
	UpdateCellMaster(context.Context, *NewCellMaster) (*EmptyReply, error)
	RequestObjectMutation(context.Context, *SingleObject) (*EmptyReply, error)
	RequestMutatingObjects(context.Context, *Cell) (*MultipleObjects, error)
	BroadcastMutatedObjects(context.Context, *MultipleObjects) (*EmptyReply, error)
	ReceiveCellMastership(context.Context, *CellList) (*EmptyReply, error)
	GetCellState(context.Context, *Cell) (*MultipleObjects, error)
	IsAlive(context.Context, *EmptyRequest) (*EmptyReply, error)
}

// UnimplementedPlayerServer can be embedded to have forward compatible implementations.
type UnimplementedPlayerServer struct {
}

func (*UnimplementedPlayerServer) ReceiveMutatedObjects(context.Context, *MultipleObjects) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveMutatedObjects not implemented")
}
func (*UnimplementedPlayerServer) UpdateCellMaster(context.Context, *NewCellMaster) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateCellMaster not implemented")
}
func (*UnimplementedPlayerServer) RequestObjectMutation(context.Context, *SingleObject) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestObjectMutation not implemented")
}
func (*UnimplementedPlayerServer) RequestMutatingObjects(context.Context, *Cell) (*MultipleObjects, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RequestMutatingObjects not implemented")
}
func (*UnimplementedPlayerServer) BroadcastMutatedObjects(context.Context, *MultipleObjects) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BroadcastMutatedObjects not implemented")
}
func (*UnimplementedPlayerServer) ReceiveCellMastership(context.Context, *CellList) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ReceiveCellMastership not implemented")
}
func (*UnimplementedPlayerServer) GetCellState(context.Context, *Cell) (*MultipleObjects, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCellState not implemented")
}
func (*UnimplementedPlayerServer) IsAlive(context.Context, *EmptyRequest) (*EmptyReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method IsAlive not implemented")
}

func RegisterPlayerServer(s *grpc.Server, srv PlayerServer) {
	s.RegisterService(&_Player_serviceDesc, srv)
}

func _Player_ReceiveMutatedObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultipleObjects)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).ReceiveMutatedObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objects.Player/ReceiveMutatedObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).ReceiveMutatedObjects(ctx, req.(*MultipleObjects))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_UpdateCellMaster_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewCellMaster)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).UpdateCellMaster(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objects.Player/UpdateCellMaster",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).UpdateCellMaster(ctx, req.(*NewCellMaster))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_RequestObjectMutation_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SingleObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).RequestObjectMutation(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objects.Player/RequestObjectMutation",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).RequestObjectMutation(ctx, req.(*SingleObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_RequestMutatingObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cell)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).RequestMutatingObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objects.Player/RequestMutatingObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).RequestMutatingObjects(ctx, req.(*Cell))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_BroadcastMutatedObjects_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MultipleObjects)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).BroadcastMutatedObjects(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objects.Player/BroadcastMutatedObjects",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).BroadcastMutatedObjects(ctx, req.(*MultipleObjects))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_ReceiveCellMastership_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CellList)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).ReceiveCellMastership(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objects.Player/ReceiveCellMastership",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).ReceiveCellMastership(ctx, req.(*CellList))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_GetCellState_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Cell)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).GetCellState(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objects.Player/GetCellState",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).GetCellState(ctx, req.(*Cell))
	}
	return interceptor(ctx, in, info, handler)
}

func _Player_IsAlive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PlayerServer).IsAlive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/objects.Player/IsAlive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PlayerServer).IsAlive(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Player_serviceDesc = grpc.ServiceDesc{
	ServiceName: "objects.Player",
	HandlerType: (*PlayerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReceiveMutatedObjects",
			Handler:    _Player_ReceiveMutatedObjects_Handler,
		},
		{
			MethodName: "UpdateCellMaster",
			Handler:    _Player_UpdateCellMaster_Handler,
		},
		{
			MethodName: "RequestObjectMutation",
			Handler:    _Player_RequestObjectMutation_Handler,
		},
		{
			MethodName: "RequestMutatingObjects",
			Handler:    _Player_RequestMutatingObjects_Handler,
		},
		{
			MethodName: "BroadcastMutatedObjects",
			Handler:    _Player_BroadcastMutatedObjects_Handler,
		},
		{
			MethodName: "ReceiveCellMastership",
			Handler:    _Player_ReceiveCellMastership_Handler,
		},
		{
			MethodName: "GetCellState",
			Handler:    _Player_GetCellState_Handler,
		},
		{
			MethodName: "IsAlive",
			Handler:    _Player_IsAlive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "objects.proto",
}
